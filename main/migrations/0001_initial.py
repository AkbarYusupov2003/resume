# Generated by Django 4.0.4 on 2022-05-28 22:11

import ckeditor.fields
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_whom', models.CharField(max_length=64, verbose_name='From Whom')),
                ('title', models.CharField(max_length=128, verbose_name='Title')),
                ('message', models.TextField(max_length=1024, verbose_name='Message')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institute', models.CharField(max_length=128, verbose_name='Institute')),
                ('institute_en', models.CharField(max_length=128, null=True, verbose_name='Institute')),
                ('institute_ru', models.CharField(max_length=128, null=True, verbose_name='Institute')),
                ('faculty', models.CharField(max_length=128, verbose_name='Faculty')),
                ('faculty_en', models.CharField(max_length=128, null=True, verbose_name='Faculty')),
                ('faculty_ru', models.CharField(max_length=128, null=True, verbose_name='Faculty')),
                ('specialization', models.CharField(max_length=128, verbose_name='Specialization')),
                ('specialization_en', models.CharField(max_length=128, null=True, verbose_name='Specialization')),
                ('specialization_ru', models.CharField(max_length=128, null=True, verbose_name='Specialization')),
                ('is_completed', models.BooleanField(default=True, verbose_name='Is Completed')),
            ],
            options={
                'verbose_name': 'Education',
                'verbose_name_plural': 'Education',
            },
        ),
        migrations.CreateModel(
            name='Languages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('name_en', models.CharField(max_length=128, null=True, verbose_name='Name')),
                ('name_ru', models.CharField(max_length=128, null=True, verbose_name='Name')),
                ('level', models.IntegerField(choices=[(1, 'beginner'), (2, 'pre-intermediate'), (3, 'intermediate'), (4, 'upper intermediate'), (5, 'native speaker')], default=1, verbose_name='Level')),
            ],
            options={
                'verbose_name': 'Language',
                'verbose_name_plural': 'Languages',
            },
        ),
        migrations.CreateModel(
            name='Skills',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('name_en', models.CharField(max_length=128, null=True, verbose_name='Name')),
                ('name_ru', models.CharField(max_length=128, null=True, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Skill',
                'verbose_name_plural': 'Skills',
            },
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField(verbose_name='Start date')),
                ('title', models.CharField(max_length=128, verbose_name='Title')),
                ('title_en', models.CharField(max_length=128, null=True, verbose_name='Title')),
                ('title_ru', models.CharField(max_length=128, null=True, verbose_name='Title')),
                ('description', ckeditor.fields.RichTextField(verbose_name='Description')),
                ('description_en', ckeditor.fields.RichTextField(null=True, verbose_name='Description')),
                ('description_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Description')),
                ('end', models.DateField(blank=True, null=True, verbose_name='End date')),
            ],
            options={
                'verbose_name': 'Work Experience',
                'verbose_name_plural': 'Work Experience',
                'ordering': ('start',),
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Title')),
                ('title_en', models.CharField(max_length=128, null=True, verbose_name='Title')),
                ('title_ru', models.CharField(max_length=128, null=True, verbose_name='Title')),
                ('short_description', models.CharField(max_length=64, verbose_name='Short Description')),
                ('short_description_en', models.CharField(max_length=64, null=True, verbose_name='Short Description')),
                ('short_description_ru', models.CharField(max_length=64, null=True, verbose_name='Short Description')),
                ('body', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Body')),
                ('body_en', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Body')),
                ('body_ru', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Body')),
                ('image', models.ImageField(upload_to='portfolio/', verbose_name='Image')),
                ('slug', models.SlugField(max_length=32, unique=True, verbose_name='Slug')),
                ('created_at', models.DateField(verbose_name='Created at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('technologies', models.ManyToManyField(to='main.skills', verbose_name='Technologies')),
            ],
            options={
                'verbose_name': 'Portfolio',
                'verbose_name_plural': 'Portfolio',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('first_name_en', models.CharField(blank=True, max_length=150, null=True, verbose_name='first name')),
                ('first_name_ru', models.CharField(blank=True, max_length=150, null=True, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('last_name_en', models.CharField(blank=True, max_length=150, null=True, verbose_name='last name')),
                ('last_name_ru', models.CharField(blank=True, max_length=150, null=True, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('photo', models.ImageField(upload_to='photo/', verbose_name='Photo')),
                ('citizenship', models.CharField(default='Uzbekistan', max_length=32, verbose_name='Citizenship')),
                ('citizenship_en', models.CharField(default='Uzbekistan', max_length=32, null=True, verbose_name='Citizenship')),
                ('citizenship_ru', models.CharField(default='Uzbekistan', max_length=32, null=True, verbose_name='Citizenship')),
                ('city', models.CharField(default='Tashkent', max_length=32, verbose_name='City')),
                ('city_en', models.CharField(default='Tashkent', max_length=32, null=True, verbose_name='City')),
                ('city_ru', models.CharField(default='Tashkent', max_length=32, null=True, verbose_name='City')),
                ('description', ckeditor.fields.RichTextField(verbose_name='Description')),
                ('description_en', ckeditor.fields.RichTextField(null=True, verbose_name='Description')),
                ('description_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Description')),
                ('birth_date', models.DateField(default='2003-12-11', verbose_name='Birth Date')),
                ('job_title', models.CharField(default='Python backend developer', max_length=128, verbose_name='Job Title')),
                ('job_status', models.IntegerField(choices=[(1, 'Full time job'), (2, 'Part-time job'), (3, 'Busy')], default=1, verbose_name='Job Status')),
                ('job_type', models.IntegerField(choices=[(1, 'Remote work'), (2, 'Daily Commute')], default=1, verbose_name='Job Type')),
                ('ready_to_relocate', models.BooleanField(default=False, verbose_name='Ready To Relocate')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
